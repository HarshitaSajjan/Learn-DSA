/*maximum subarray sum
subarray is contigous part of array
*/
/*brute force
try out all subarrays
maxi =INT_MIN;
for(i=0; i<n; i++){
for(j=i; j<j; j++){
sum=0;
for(k=i->j)
sum+=arr[k]
maxi=max(maxi,sum);
}
}

O(n3) tc
sc O(1)
*/

/*better solution

maxi =INT_MIN;
for(i=0; i<n; i++){
sum=0;
for(j=i; j<j; j++){

sum+=arr[j]
maxi=max(maxi,sum);
}
}

tcO(n2)
scO(1)
*/

/*Kadanse algorithm

maxi = INT_MINl
sum=0;

 
*/
long long maxsubarr(int arr[], int n){
long long sum=0,maxi=LONG_MIN;
for(int i=0; i<n; i++){
    if(sum==0)
    start=i;
    ansstart=-1;
    ansend=-1;
    sum+=arr[i]

    if(sum>maxi){
        maxi=sum;
        ansstart=start, ansend=i;
    }

    if(sum<0){
        sum=0;
    }
    return maxi;
}
}

tc O(n)
sc o(1)
